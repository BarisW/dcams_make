#!/bin/bash
# This is a simple build script and will be executed on your CI system if 
# available.  Otherwise it will execute while your application is stopped
# before the deploy step.  This script gets executed directly, so it
# could be python, php, ruby, etc. 

set -e

#
# The PHP dir most be controlled by Drupal content
#
if [ -e "${OPENSHIFT_REPO_DIR}php" -a ! -h "${OPENSHIFT_REPO_DIR}php" ]
then
  echo "ERROR: The 'php' directory in your Git repo prevents Drupal from being installed.  Please remove 'php' and push again."
  exit 5
fi

DRUPAL_DIR=${OPENSHIFT_DATA_DIR}drupal
DRUPAL_SITE_DIR=${OPENSHIFT_DATA_DIR}sites.default

echo

# Drush settings
cat >$OPENSHIFT_HOMEDIR/.drush/drushrc.php <<EOF
<?php
  \$options['uri'] = \$_ENV['OPENSHIFT_APP_DNS'];
  \$options['root'] = \$_ENV['OPENSHIFT_REPO_DIR'].'php';
EOF

if [ ! -e "${OPENSHIFT_REPO_DIR}dcams.make" ]
then
  echo "ERROR: No dcams.make file in your Git repo."
  exit 5
fi
  
# Very basic backup previous version. Just keeps last.
if [ -d "${OPENSHIFT_DATA_DIR}downloads/current" ]
then
  DRUPAL_PREVIOUS_DIR=$(readlink -f ${OPENSHIFT_DATA_DIR}downloads/current)
  if [ -d "${OPENSHIFT_DATA_DIR}downloads/last" ]
  then
    DRUPAL_LAST_BACKUP=$(readlink -f ${OPENSHIFT_DATA_DIR}downloads/last)
    echo "Deleting previous backup ${DRUPAL_LAST_BACKUP}"
    rm -rf ${DRUPAL_LAST_BACKUP}
  fi
  echo "Deleting old backup symlink ${OPENSHIFT_DATA_DIR}downloads/last"
  rm -f "${OPENSHIFT_DATA_DIR}downloads/last"
  rm -f "${OPENSHIFT_DATA_DIR}downloads/current"
  echo "Creating new symlink ${DRUPAL_PREVIOUS_DIR}"
  ln -s ${DRUPAL_PREVIOUS_DIR} "${OPENSHIFT_DATA_DIR}downloads/last"
fi

mkdir -p ${OPENSHIFT_TMP_DIR}drupal

echo "Running make file."
echo

mkdir -p ${OPENSHIFT_DATA_DIR}downloads
LATEST="dcams-`date +%Y%m%d%H%M%S`"
export DRUPAL_INSTALL_DIR="${OPENSHIFT_DATA_DIR}downloads/${LATEST}"
if ! drush make "${OPENSHIFT_REPO_DIR}dcams.make" ${DRUPAL_INSTALL_DIR}
then
  echo "ERROR: Failed running make file."
  exit 7
fi

#
# Link the /current symlink to the latest Drupal instance
#
rm -f ${OPENSHIFT_DATA_DIR}downloads/current
ln -s ${LATEST} ${OPENSHIFT_DATA_DIR}downloads/current

mv $DRUPAL_INSTALL_DIR/sites/default $DRUPAL_INSTALL_DIR/sites.default.original

#
# Ensure there is a default health check
#
cp ${OPENSHIFT_REPO_DIR}.openshift/health_check.php ${DRUPAL_INSTALL_DIR}

patch ${DRUPAL_INSTALL_DIR}/.htaccess < ${OPENSHIFT_REPO_DIR}.openshift/.htaccess.patch

echo "Drupal installed to $DRUPAL_INSTALL_DIR"

echo

#
# Link the /sites directory (where Drupal stores modules and files)
# into the install dir in order to keep it easily accessible.
#/
if [ ! -d "$DRUPAL_SITE_DIR" ]
then
  cp -r $DRUPAL_INSTALL_DIR/sites.default.original $DRUPAL_SITE_DIR
fi
ln -sfn $DRUPAL_SITE_DIR $DRUPAL_INSTALL_DIR/sites/default

#
# Ensure that the app-root/runtime/repo/php PHP directory points
# to a valid Drupal instance directory
#
ln -sfn ../../data/downloads/current ${OPENSHIFT_REPO_DIR}php
if [ ! -d "${OPENSHIFT_REPO_DIR}php" ]
then  
  echo "ERROR: Unable to link the PHP directory, as the current Drupal instance is not a valid directory."
  exit 8
fi
